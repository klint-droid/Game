<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Live Leaderboard</title>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
  padding: 30px;
  color: #333;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

h2 {
  font-size: 2.5em;
  margin-bottom: 25px;
  color: #0072ff;
  text-shadow: 1px 1px 2px #ccc;
  animation: fadeInDown 0.6s ease-in-out;
}

table {
  width: 90%;
  max-width: 800px;
  border-collapse: collapse;
  background: white;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  overflow: hidden;
  animation: fadeInUp 0.8s ease-in-out;
}

th {
    background: linear-gradient(90deg, rgba(2, 0, 6, 0.493) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 21, 255, 1) 100%);
  color: white;
  font-size: 1.1em;
  padding: 14px;
  letter-spacing: 0.5px;
}

td {
  padding: 12px;
  font-size: 1em;
  border-bottom: 1px solid #eee;
  text-align: center;
}
td:first-child {
  font-weight: bold;
  font-size: 1.2em;
}

tr:nth-child(even) {
  background-color: #f9f9f9;
}

tr:hover {
  background-color: #e6f2ff;
  transition: background-color 0.3s ease;
}

button {
  background-color: #0072ff;
  color: white;
  border: none;
  padding: 10px 20px;
  margin-top: 20px;
  font-size: 1em;
  font-weight: bold;
  border-radius: 6px;
  cursor: pointer;
  transition: 0.3s ease-in-out;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  animation: fadeInUp 1s ease;
}

button:hover {
  background-color: #005ec2;
  transform: translateY(-2px);
}

#last-updated {
  margin-top: 15px;
  font-style: italic;
  color: #666;
  font-size: 0.95em;
  animation: fadeIn 1.2s ease;
}

/* Animations */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
    body{
    margin: 0;
    padding: 0;
}

.wrapper{
    position: absolute;
    padding-top: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
     background: linear-gradient(90deg, rgba(2, 0, 6, 0.349) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 21, 255, 1) 100%);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;


}   

    
.box div{
    position: absolute;
    width: 60px;
    height: 60px;
    background: transparent;
    border: 6px solid rgba(255,255,255,0.8);
}

.box div:nth-child(1){
    top: 12%;
    left: 42%;
    animation: animate 10s linear infinite;

}

.box div:nth-child(2){
    top: 70%;
    left: 50%;
    animation: animate 7s linear infinite;

}
.box div:nth-child(3){
    top: 17%;
    left: 6%;
    animation: animate 9s linear infinite;

}
.box div:nth-child(4){
    top: 20%;
    left: 60%;
    animation: animate 10s linear infinite;

}
.box div:nth-child(5){
    top: 67%;
    left: 10%;
    animation: animate 6s linear infinite;
}
.box div:nth-child(6){
    top: 80%;
    left: 70%;
    animation: animate 12s linear infinite;
}
.box div:nth-child(7){
    top: 60%;
    left: 80%;
    animation: animate 15s linear infinite;

}
.box div:nth-child(8){
    top: 32%;
    left: 25%;
    animation: animate 16s linear infinite;

}
.box div:nth-child(9){
    top: 90%;
    left: 25%;
    animation: animate 9s linear infinite;

}
.box div:nth-child(10){
    top: 20%;
    left: 80%;
    animation: animate 5s linear infinite;

}

@keyframes animate{
    0%{
        transform: scale(0) translateY(0) rotate(0);
        opacity: 1;
    }
    100%{
        transform: scale(1.3) translateY(-90px) rotate(360deg);
        opacity: 0;
    }
}
  </style>
</head>
<body>
  <%- include('../partials/nav') %>

  <div class="wrapper">
        <div class="box">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>
  <h2>üèÜ WakatWord Game Leaderboard</h2>

  <table id="leaderboard">
    <thead>
      <tr><th>Rank</th><th>Username</th><th>Score</th><th>Wins</th><th>Losses</th></tr>
    </thead>
    <tbody></tbody>
  </table>

  <button onclick="manualRefresh()">üîÑ Refresh</button>
  <p id="last-updated">‚è±Ô∏è Last updated: never</p>

  <script>
    const socket = io();
    const tbody = document.querySelector('#leaderboard tbody');
    const lastUpdated = document.getElementById('last-updated');
    const refreshButton = document.querySelector('button');

    socket.on('leaderboard', (data) => {
      tbody.innerHTML = '';
      if (data.length === 0) {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td colspan="5">No data available</td>`;
        tbody.appendChild(tr);
        return;
      }

            data.forEach((row, i) => {
        const tr = document.createElement('tr');
        let rankDisplay;

        switch (i) {
          case 0:
            rankDisplay = 'ü•á';
            break;
          case 1:
            rankDisplay = 'ü•à';
            break;
          case 2:
            rankDisplay = 'ü•â';
            break;
          default:
            rankDisplay = `${i + 1}th`;
        }

        tr.innerHTML = `
          <td>${rankDisplay}</td>
          <td>${row.username}</td>
          <td>${row.score}</td>
          <td>${row.wins}</td>
          <td>${row.losses}</td>
        `;
        tbody.appendChild(tr);
      });

      updateTimestamp();
    });

    function updateTimestamp() {
      lastUpdated.textContent = `‚è±Ô∏è Last updated: ${new Date().toLocaleTimeString()}`;
    }

    function manualRefresh() {
      refreshButton.disabled = true;
      refreshButton.textContent = 'Refreshing...';

      fetch('/sync')
        .then(() => {
          refreshButton.disabled = false;
          refreshButton.textContent = 'üîÑ Refresh';
          updateTimestamp();
        })
        .catch((err) => {
          console.error("Error refreshing leaderboard:", err);
          refreshButton.disabled = false;
          refreshButton.textContent = 'üîÑ Refresh';
        });
    }

    // Auto-refresh every 10 seconds
    setInterval(() => {
      fetch('/sync').then(updateTimestamp).catch(console.error);
    }, 10000);
  </script>
</body>
</html>
